# -*- coding: utf-8 -*-
"""AnimeFaceDetectionViaCustomTrainedYolov5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DmgekX1hfIquDUBfvAFwFOyRXnqm_2mF

MOUNT DRIVE FOR DATASET
"""

from google.colab import drive
drive.mount('/content/drive')

"""Download the Kaggle API token.

*   Go to “Account”, go down the page, and find the “API” section.
*   Click the “Create New API Token” button.
*   The “kaggle.json” file will be downloaded.

Upload the “kaggle.json” file into the folder in google drive where you want to download the Kaggle dataset.

INSTALL KAGGLE API
"""

! pip install -q kaggle

"""CHANGE CURRENT DIRECTORY"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/AnimeFaveDataSet/

"""RUN THE CODE TO CONFIGURE PATH TO "kaggle.json""""

import os
os.environ['KAGGLE_CONFIG_DIR'] = "/content/drive/MyDrive/AnimeFaveDataSet/"

!chmod 700 /content/drive/MyDrive/AnimeFaveDataSet/kaggle.json

"""DOWNLOAD THE DATASET"""

! kaggle datasets download -d andy8744/annotated-anime-faces-dataset

"""UNZIP THE DATA"""

! unzip annotated-anime-faces-dataset.zip -d animeFaceDataset

"""CLONING THE YOLO-V5 FILES FROM OFFICIAL REPOSITORY"""

! git clone https://github.com/ultralytics/yolov5.git

"""CHANGING THE DIRECTORY"""

# Commented out IPython magic to ensure Python compatibility.
# %cd yolov5/

"""INSTALLING THE DEPENDENCIES"""

! pip install -r requirements.txt

"""DOWNLOADING ALL VERSIONS OF YOLO-V5 MODEL"""

! chmod 755 -R /content/drive/MyDrive/AnimeFaveDataSet/yolov5/data/scripts/download_weights.sh
! /content/drive/MyDrive/AnimeFaveDataSet/yolov5/data/scripts/download_weights.sh

"""STEPS BEFORE TRAINING CUSTOM DATASET:


1.   Go to yolov5/data/
2.   Open coco128.yaml
3.   Edit the following inside it:
   1.   Training and Test file path
   2.   Number of classes and Class names.

TRAINING THE YOLO-V5 MODEL (TIME EG 2hour/epoch)
"""

!python train.py --img 640 --batch 16 --epochs 1 --data coco128.yaml --weights yolov5s.pt --nosave --cache

"""VISUALIZING THE TRAINING METRICS"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir runs/train

"""DETECTING LONG VIDEO TEST (TIME EG 3hour)"""

!python detect.py --weights /content/drive/MyDrive/AnimeFaveDataSet/yolov5/runs/train/exp2/weights/best.pt --source /content/drive/MyDrive/AnimeFaveDataSet/anime.mkv
python detect.py --weights runs/train/exp2/weights/best.pt --source test1

"""`!python detect.py --source /content/test/images --weights /content/yolov5/runs/train/exp2/weights/best.pt --img 416 --save-txt --save-conf`

RETRAINING FROM THE LAST CHECKPOINT
"""

!python train.py --weights /content/drive/MyDrive/AnimeFaveDataSet/yolov5/runs/train/exp2/weights/last.pt --epochs 2 --img 640

"""Visualise progress"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard
# %tensorboard --logdir runs/train

"""QUICK TEST (TIME eg 1sec)"""

!python detect.py --weights /content/drive/MyDrive/AnimeFaveDataSet/yolov5/runs/train/exp2/weights/best.pt --source /content/drive/MyDrive/AnimeFaveDataSet/5girls.png

"""SHORT VIDEO"""

!python detect.py --weights /content/drive/MyDrive/AnimeFaveDataSet/yolov5/runs/train/exp2/weights/best.pt --source /content/drive/MyDrive/AnimeFaveDataSet/NEKOPARA.mkv

"""CREATING FROM SCRATCH"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/AnimeFaveDataSet/animeFaceDataset
# %ls
# %cat data.yaml

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/AnimeFaveDataSet/yolov5/data/
# %ls
# %cat coco128.yaml

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/AnimeFaveDataSet/yolov5

!python train.py --img 640 --batch 5 --epochs 3 --weights '' --cfg yolov5s6.yaml --data /content/drive/MyDrive/AnimeFaveDataSet/yolov5/data/coco128.yaml --cache

"""Check results"""

!kill 388

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext tensorboard

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir runs/train

"""RETRAINING"""

!python train.py --weights [LAST.py] --epochs 2 --img 640